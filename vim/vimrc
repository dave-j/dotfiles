execute pathogen#infect()

set nocompatible
syntax on
filetype plugin on

set expandtab
set tabstop=8
set softtabstop=2
set shiftwidth=2
set autoindent
set number
set relativenumber

set backspace=indent,eol,start
set wrap
set linebreak
set showbreak=â€¦
set ignorecase

set showcmd

set nobackup
set writebackup

set path+=**
set wildmenu

set foldmethod=marker

if has("gui_running")
  set guifont=Terminus\ 12
  colorscheme desert
  set guioptions-=m  "remove menu bar
  set guioptions-=T  "remove toolbar
endif

" previous/next tab using C-n and C-p
nmap  :tabp<CR>
nmap  :tabn<CR>

" search {{{

set incsearch
set hlsearch
" hide highlighted search
nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>

" }}}

" move link up/down using C-k and C-j
map <c-k> kddpk
map <c-j> ddp

" open/close fold using <space>
nnoremap <space> za

let mapleader=","
"let mapleader="\<Space>"
noremap <Leader>hey :echo "Hey, ho, let's go!"<cr>

vmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a; :Tabularize /::<CR>
vmap <Leader>a- :Tabularize /-><CR>

" asy {{{

augroup filetypedetect
au BufNewFile,BufRead *.asy     setf asy
augroup END

" }}}

" netrw {{{

let g:netrw_banner=0
let g:netrw_browse_split=4
let g:netrw_altv=1
"let g:netrw_liststyle=3

" }}}

" MyStatusLine() {{{

function! MyStatusLine()
    let statusline = ""
    " Filename (F -> full, f -> relative)
    let statusline .= "%f"
    " Buffer flags
    let statusline .= "%( %h%1*%m%*%r%w%) "
    " File format and type
    let statusline .= "(%{&ff}%(\/%Y%))"
    " Left/right separator
    let statusline .= "%="
    " Line & column
    let statusline .= "(%l,%c%V) "
    " Character under cursor (decimal)
    let statusline .= "%03.3b "
    " Character under cursor (hexadecimal)
    let statusline .= "0x%02.2B "
    " File progress
    let statusline .= "| %P/%L"
    return statusline
endfunction

"set statusline=%<%f\ 0x%02B\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set statusline=%!MyStatusLine()
set laststatus=2

" }}}
